name: iOS Tests

on:
  pull_request:
    branches: [ main, develop ] # ajusta para os branches que quiser monitorar
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macOS-latest

    steps:
      - name: Checkout repository
#        uses: actions/checkout@v4
        uses: actions/checkout@v4
#
#      - name: Set up Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: 3.2 # Ajusta para a vers√£o que voc√™ usa no projeto

#      - name: Install dependencies
#        run: |
#          gem install bundler
#          bundle install

      - name: Bundle Install
        run: bundle install

      # - name: Ensure iOS Simulator is available
      #   run: sudo xcode-select -s /Applications/Xcode_16.app

      - name: Run tests with Fastlane
        id: run_tests
        run: bundle exec fastlane tests
      
      - name: Send Discord Notification
        if: always() # executa mesmo se falhar
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          JOB_STATUS: ${{ job.status }}
        run: |
          STATUS="‚úÖ Success"
          if [ "$JOB_STATUS" != "success" ]; then
            STATUS="‚ùå Failed"
          fi

          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"üì± iOS Tests completed: $STATUS\nüîó Repository: $GITHUB_REPOSITORY\nüåø Ref: $GITHUB_REF\"}" \
               "$WEBHOOK_URL"
      - name: send DiscordNotification FastLane
        run: bundle exec fastlane discord

